{
  "version": 3,
  "sources": ["../src/index.ts", "../src/utils/EventEmittable.ts", "../src/utils/applyMixins.ts", "../src/utils/mod.ts", "../src/BeatManager.ts", "../src/BufferReaderNode.ts", "../src/shaderchunks.ts", "../src/utils/lazyProgram.ts", "../src/Renderer.ts", "../src/TextureStore.ts", "../src/utils/lerp.ts", "../src/WavenerdDeck.ts"],
  "sourcesContent": ["export { WavenerdDeck } from './WavenerdDeck';\nexport { BeatManager } from './BeatManager';\n\nimport { WavenerdDeck } from './WavenerdDeck';\nexport default WavenerdDeck;\n", "// Ref: https://github.com/andywer/typed-emitter/blob/master/index.d.ts\n\nexport type EventListener<T> = ( event: T ) => void;\n\nexport class EventEmittable<TEvents extends { [ type: string ]: any }> {\n  protected __eventListeners?: Map<keyof TEvents, EventListener<any>[]>;\n\n  public on<TType extends keyof TEvents & string>(\n    type: TType,\n    listener: EventListener<TEvents[ TType ]>\n  ): EventListener<TEvents[ TType ]> {\n    this.__eventListeners = this.__eventListeners || new Map();\n    let array = this.__eventListeners.get( type );\n    if ( !array ) {\n      array = [];\n      this.__eventListeners.set( type, array );\n    }\n\n    array.push( listener );\n\n    return listener;\n  }\n\n  public off<TType extends keyof TEvents & string>(\n    type: TType,\n    listener: EventListener<TEvents[ TType ]>\n  ): void {\n    this.__eventListeners = this.__eventListeners || new Map();\n    let array = this.__eventListeners.get( type );\n    if ( !array ) {\n      array = [];\n      this.__eventListeners.set( type, array );\n    }\n\n    const index = array.indexOf( listener );\n    if ( index !== -1 ) {\n      array.splice( index, 1 );\n    }\n  }\n\n  protected __emit<TType extends keyof TEvents>(\n    ...[ type, event ]: TEvents[ TType ] extends void ? [ TType ] : [ TType, TEvents[ TType ] ]\n  ): void {\n    this.__eventListeners = this.__eventListeners || new Map();\n    this.__eventListeners.get( type )?.forEach( ( listener ) => listener( event ) );\n  }\n}\n", "export function applyMixins( derivedCtor: any, baseCtors: any[] ): void {\n  baseCtors.forEach( ( baseCtor ) => {\n    Object.getOwnPropertyNames( baseCtor.prototype ).forEach( ( name ) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor( baseCtor.prototype, name )!\n      );\n    } );\n  } );\n}\n", "export function mod( value: number, divisor: number ): number {\n  return value - Math.floor( value / divisor ) * divisor;\n}\n", "import { EventEmittable } from './utils/EventEmittable';\nimport { applyMixins } from './utils/applyMixins';\nimport { mod } from './utils/mod';\n\nexport interface BeatManagerUpdateEvent {\n  time: number;\n  bpm: number;\n  beat: number;\n  bar: number;\n  sixteenBar: number;\n}\n\nexport class BeatManager {\n  public static CalcBeatSeconds( bpm: number ): number {\n    return 60.0 / bpm;\n  }\n\n  public static CalcBarSeconds( bpm: number ): number {\n    // return this.beatLength * 4.0;\n    return 240.0 / bpm;\n  }\n\n  public static CalcSixteenBarSeconds( bpm: number ): number {\n    // return this.barLength * 16.0;\n    return 3840.0 / bpm;\n  }\n\n  private __bpm = 140.0;\n  public get bpm(): number {\n    return this.__bpm;\n  }\n  public set bpm( value: number ) {\n    const prevBpm = this.__bpm;\n    this.__bpm = Math.max( 0.0, value );\n    this.__sixteenBar = this.__sixteenBar * prevBpm / this.__bpm;\n    this.__emit( 'changeBPM', { bpm: this.__bpm } );\n  }\n\n  public get beatSeconds(): number {\n    return BeatManager.CalcBeatSeconds( this.__bpm );\n  }\n\n  public get barSeconds(): number {\n    return BeatManager.CalcBarSeconds( this.__bpm );\n  }\n\n  public get sixteenBarSeconds(): number {\n    return BeatManager.CalcSixteenBarSeconds( this.__bpm );\n  }\n\n  private __time = 0.0;\n  public get time(): number {\n    return this.__time;\n  }\n\n  private __beat = 0.0;\n  public get beat(): number {\n    return this.__beat;\n  }\n\n  private __bar = 0.0;\n  public get bar(): number {\n    return this.__bar;\n  }\n\n  private __sixteenBar = 0.0;\n  public get sixteenBar(): number {\n    return this.__sixteenBar;\n  }\n\n  public reset(): void {\n    this.__time = 0.0;\n    this.__sixteenBar = 0.0;\n  }\n\n  public update( time: number ): BeatManagerUpdateEvent {\n    const beatSeconds = BeatManager.CalcBeatSeconds( this.__bpm );\n    const barSeconds = BeatManager.CalcBarSeconds( this.__bpm );\n    const sixteenBarSeconds = BeatManager.CalcSixteenBarSeconds( this.__bpm );\n\n    const delta = time - this.__time;\n\n    this.__sixteenBar = mod( this.__sixteenBar + delta, sixteenBarSeconds );\n    this.__bar = mod( this.__sixteenBar, barSeconds );\n    this.__beat = mod( this.__bar, beatSeconds );\n\n    this.__time = time;\n\n    const event = {\n      time,\n      bpm: this.__bpm,\n      beat: this.__beat,\n      bar: this.__bar,\n      sixteenBar: this.__sixteenBar,\n    };\n\n    this.__emit( 'update', event );\n\n    return event;\n  }\n}\n\nexport interface BeatManager extends EventEmittable<{\n  update: BeatManagerUpdateEvent;\n  changeBPM: { bpm: number };\n}> {}\napplyMixins( BeatManager, [ EventEmittable ] );\n", "import processorCode from './BufferReaderProcessor.worklet.js';\n\nconst BLOCK_SIZE = 128;\nconst CHANNELS = 2;\nconst BUFFER_SIZE_PER_CHANNEL = 65536;\n\nconst processorBlob = new Blob( [ processorCode ], { type: 'text/javascript' } );\nconst processorUrl = URL.createObjectURL( processorBlob );\n\nexport class BufferReaderNode extends AudioWorkletNode {\n  private __readBlocks: number;\n\n  public get readBlocks(): number {\n    return this.__readBlocks;\n  }\n\n  public static addModule( audio: AudioContext ): Promise<void> {\n    return audio.audioWorklet.addModule( processorUrl );\n  }\n\n  public setActive( isActive: boolean ): void {\n    this.port.postMessage( isActive );\n  }\n\n  public constructor( audio: AudioContext ) {\n    super( audio, 'buffer-reader-processor', {\n      numberOfInputs: 0,\n      numberOfOutputs: 1,\n      outputChannelCount: [ CHANNELS ],\n    } );\n\n    this.__readBlocks = 0;\n\n    this.port.onmessage = ( ( { data } ) => {\n      this.__readBlocks = data;\n    } );\n  }\n\n  public write( channel: number, block: number, offset: number, buffer: ArrayLike<number> ): void {\n    const totalOffset = (\n      BUFFER_SIZE_PER_CHANNEL * channel\n      + ( BLOCK_SIZE * block ) % BUFFER_SIZE_PER_CHANNEL\n      + offset\n    );\n    this.port.postMessage( [ buffer, totalOffset ] );\n  }\n}\n", "export const shaderchunkPre = `#version 300 es\n\nprecision highp float;\n\n#define _PI 3.14159265359\n\nuniform float bpm;\nuniform vec4 timeLength;\nuniform float sampleRate;\nuniform float _deltaSample;\nuniform vec4 _timeHead;\n\nin float off;\n\nout float outL;\nout float outR;\n\nfloat paramFetch( vec4 param ) {\n  return mix( param.x, param.y, exp( -param.z * off * _deltaSample ) );\n}\n\nfloat wavetableNearest( sampler2D w, vec4 meta, vec2 position ) {\n  vec2 uv0 = fract( vec2(\n    position.x,\n    ( floor( fract( position.y ) * ( meta.y - 1.0 ) ) + 0.5 ) / meta.y\n  ) );\n  vec2 uv1 = uv0 + vec2( 0.0, 1.0 / meta.y );\n  return mix(\n    texture( w, uv0 ).x,\n    texture( w, uv1 ).x,\n    fract( position.y * ( meta.y - 1.0 ) )\n  );\n}\n\nfloat wavetableSinc( sampler2D w, vec4 meta, vec2 position ) {\n  float sum = 0.0;\n  float def = -fract( position.x * meta.x );\n  for ( int i = -5; i <= 5; i ++ ) {\n    float x = floor( position.x * meta.x + float( i ) ) / meta.x;\n    float deft = def + float( i );\n    vec2 uv0 = fract( vec2(\n      x,\n      ( floor( fract( position.y ) * ( meta.y - 1.0 ) ) + 0.5 ) / meta.y\n    ) );\n    vec2 uv1 = uv0 + vec2( 0.0, 1.0 / meta.y );\n    sum += mix(\n      texture( w, uv0 ).x,\n      texture( w, uv1 ).x,\n      fract( position.y * ( meta.y - 1.0 ) )\n    ) * min( sin( deft * _PI ) / deft / _PI, 1.0 );\n  }\n  return sum;\n}\n\nvec2 sampleNearest( sampler2D s, vec4 meta, float time ) {\n  if ( meta.w < time ) { return vec2( 0.0 ); }\n  float x = time / meta.x * meta.z;\n  vec2 uv = fract( vec2(\n    x,\n    floor( x ) / meta.y\n  ) ) + 0.5 / meta.xy;\n  return texture( s, uv ).xy;\n}\n\nvec2 sampleSinc( sampler2D s, vec4 meta, float time ) {\n  if ( meta.w < time ) { return vec2( 0.0 ); }\n  vec2 sum = vec2( 0.0 );\n  float def = -fract( time * meta.z );\n  for ( int i = -5; i <= 5; i ++ ) {\n    float x = floor( time * meta.z + float( i ) ) / meta.x;\n    float deft = def + float( i );\n    vec2 uv = fract( vec2(\n      x,\n      floor( x ) / meta.y\n    ) ) + 0.5 / meta.xy;\n    sum += texture( s, uv ).xy * min( sin( deft * _PI ) / deft / _PI, 1.0 );\n  }\n  return sum;\n}\n`;\n\nexport const shaderchunkPreLines = shaderchunkPre.split( '\\n' ).length;\n\nexport const shaderchunkPost = `void main() {\n  vec2 out2 = mainAudio( mod( _timeHead + off * _deltaSample, timeLength ) );\n  outL = out2.x;\n  outR = out2.y;\n}`;\n", "export function lazyProgram(\n  gl: WebGL2RenderingContext,\n  vert: string,\n  frag: string,\n  options: {\n    /**\n     * `KHR_parallel_shader_compile`.\n     * Compile async if provided.\n     */\n    extParallel?: any,\n\n    tfVaryings?: string[],\n\n    /**\n     * `gl.SEPARATE_ATTRIBS` by default\n     */\n    tfBufferMode?: number,\n  } = {},\n): Promise<WebGLProgram> {\n  const { extParallel, tfVaryings, tfBufferMode } = options;\n\n  let vertexShader: WebGLShader | null = null;\n  let fragmentShader: WebGLShader | null = null;\n  let program: WebGLProgram | null = null;\n\n  try {\n    // == vert =====================================================================================\n    vertexShader = gl.createShader( gl.VERTEX_SHADER )!;\n\n    gl.shaderSource( vertexShader, vert );\n    gl.compileShader( vertexShader );\n\n    if ( !gl.getShaderParameter( vertexShader, gl.COMPILE_STATUS ) ) {\n      throw new Error( gl.getShaderInfoLog( vertexShader ) ?? undefined );\n    }\n\n    // == frag =====================================================================================\n    fragmentShader = gl.createShader( gl.FRAGMENT_SHADER )!;\n\n    gl.shaderSource( fragmentShader, frag );\n    gl.compileShader( fragmentShader );\n\n    if ( !gl.getShaderParameter( fragmentShader, gl.COMPILE_STATUS ) ) {\n      throw new Error( gl.getShaderInfoLog( fragmentShader ) ?? undefined );\n    }\n\n    // == program ==================================================================================\n    program = gl.createProgram()!;\n\n    gl.attachShader( program, vertexShader );\n    gl.attachShader( program, fragmentShader );\n\n    if ( tfVaryings ) {\n      gl.transformFeedbackVaryings(\n        program,\n        tfVaryings,\n        tfBufferMode ?? gl.SEPARATE_ATTRIBS,\n      );\n    }\n\n    gl.linkProgram( program );\n\n    return new Promise( ( resolve, reject ) => {\n      const update = () => {\n        if (\n          !extParallel ||\n          gl.getProgramParameter( program!, extParallel.COMPLETION_STATUS_KHR ) === true\n        ) {\n          if ( !gl.getProgramParameter( program!, gl.LINK_STATUS ) ) {\n            gl.deleteProgram( program );\n            reject( new Error( gl.getProgramInfoLog( program! ) ?? undefined ) );\n          } else {\n            resolve( program! );\n          }\n\n          return;\n        }\n\n        setTimeout( update, 10 );\n      };\n      update();\n    } );\n  } catch ( e ) {\n    gl.deleteProgram( program );\n\n    return Promise.reject( e );\n  } finally {\n    gl.deleteShader( fragmentShader );\n    gl.deleteShader( vertexShader );\n  }\n}\n", "import { shaderchunkPost, shaderchunkPre } from './shaderchunks';\nimport { lazyProgram } from './utils/lazyProgram';\n\nconst BLOCK_SIZE = 128;\n\nexport class Renderer {\n  public readonly gl: WebGL2RenderingContext;\n  public readonly blocksPerRender: number;\n\n  public readonly __extParallel: any;\n\n  public get framesPerRender(): number {\n    return BLOCK_SIZE * this.blocksPerRender;\n  }\n\n  private __offsetBuffer: WebGLBuffer;\n  private __tfBuffers: [ WebGLBuffer, WebGLBuffer ];\n  private __transformFeedback: WebGLTransformFeedback;\n\n  private __program: WebGLProgram | null;\n  private __programCue: WebGLProgram | null;\n\n  private __dstArrays: [ Float32Array, Float32Array ];\n\n  public constructor( gl: WebGL2RenderingContext, blocksPerRender: number ) {\n    this.blocksPerRender = blocksPerRender;\n\n    this.gl = gl;\n\n    this.__extParallel = gl.getExtension( 'KHR_parallel_shader_compile' );\n\n    this.__offsetBuffer = this.__createOffsetBuffer();\n    this.__tfBuffers = [\n      this.__createTFBuffer(),\n      this.__createTFBuffer(),\n    ];\n    this.__transformFeedback = this.__createTransformFeedback( this.__tfBuffers );\n\n    this.__dstArrays = [\n      new Float32Array( this.framesPerRender ),\n      new Float32Array( this.framesPerRender ),\n    ];\n\n    this.__program = null;\n    this.__programCue = null;\n  }\n\n  /**\n   * Dispose the renderer.\n   */\n  public dispose(): void {\n    const { gl } = this;\n\n    gl.deleteBuffer( this.__offsetBuffer );\n    gl.deleteBuffer( this.__tfBuffers[ 0 ] );\n    gl.deleteBuffer( this.__tfBuffers[ 1 ] );\n\n    gl.deleteTransformFeedback( this.__transformFeedback );\n\n    gl.deleteProgram( this.__program );\n    gl.deleteProgram( this.__programCue );\n  }\n\n  /**\n   * Compile given shader code and cue the shader.\n   */\n  public async compile( code: string ): Promise<void> {\n    const { gl } = this;\n\n    const program = await lazyProgram(\n      gl,\n      shaderchunkPre + code + shaderchunkPost,\n      '#version 300 es\\nvoid main(){discard;}',\n      {\n        extParallel: this.__extParallel,\n        tfVaryings: [ 'outL', 'outR' ],\n      },\n    ).catch( ( error ) => {\n      this.__programCue = null;\n      gl.deleteProgram( this.__programCue );\n\n      throw error;\n    } );\n\n    if ( program == null ) { return; }\n\n    this.__programCue = program;\n  }\n\n  /**\n   * Apply the cue shader.\n   *\n   * It does not do nothing when cue is not set.\n   * Feel free to mash this method for no reason.\n   */\n  public applyCue(): void {\n    const { gl } = this;\n\n    if ( this.__programCue == null ) { return; }\n\n    const prevProgram = this.__program;\n    this.__program = this.__programCue;\n\n    if ( prevProgram != null ) {\n      gl.deleteProgram( prevProgram );\n    }\n    this.__programCue = null;\n  }\n\n  /**\n   * Set an uniform1f to the current program.\n   */\n  public uniform1f( name: string, value: number ): void {\n    const { gl, __program: program } = this;\n    if ( program == null ) { return; }\n\n    const location = gl.getUniformLocation( program, name );\n\n    gl.useProgram( program );\n    gl.uniform1f( location, value );\n    gl.useProgram( null );\n  }\n\n  /**\n   * Set an uniform4f to the current program.\n   */\n  public uniform4f( name: string, ...value: [ number, number, number, number ] ): void {\n    const { gl, __program: program } = this;\n    if ( program == null ) { return; }\n\n    const location = gl.getUniformLocation( program, name );\n\n    gl.useProgram( program );\n    gl.uniform4f( location, ...value );\n    gl.useProgram( null );\n  }\n\n  /**\n   * Set a texture uniform to the current program.\n   */\n  public uniformTexture( name: string, unit: number, texture: WebGLTexture ): void {\n    const { gl, __program: program } = this;\n    if ( program == null ) { return; }\n\n    const location = gl.getUniformLocation( program, name );\n\n    gl.activeTexture( gl.TEXTURE0 + unit );\n    gl.bindTexture( gl.TEXTURE_2D, texture );\n\n    gl.useProgram( program );\n    gl.uniform1i( location, unit );\n    gl.useProgram( null );\n  }\n\n  /**\n   * Render and return a buffer.\n   */\n  public async render( first: number, count: number ): Promise<[ Float32Array, Float32Array ]> {\n    const { gl, __program: program } = this;\n    if ( program == null ) {\n      return this.__dstArrays;\n    }\n\n    // attrib\n    const attribLocation = gl.getAttribLocation( program, 'off' );\n\n    gl.bindBuffer( gl.ARRAY_BUFFER, this.__offsetBuffer );\n    gl.enableVertexAttribArray( attribLocation );\n    gl.vertexAttribPointer( attribLocation, 1, gl.FLOAT, false, 0, 0 );\n\n    // render\n    gl.useProgram( program );\n    gl.bindTransformFeedback( gl.TRANSFORM_FEEDBACK, this.__transformFeedback );\n    gl.enable( gl.RASTERIZER_DISCARD );\n\n    gl.beginTransformFeedback( gl.POINTS );\n    gl.drawArrays( gl.POINTS, first, count );\n    gl.endTransformFeedback();\n\n    gl.disable( gl.RASTERIZER_DISCARD );\n    gl.bindTransformFeedback( gl.TRANSFORM_FEEDBACK, null );\n    gl.useProgram( null );\n\n    // feedback\n    gl.bindBuffer( gl.ARRAY_BUFFER, this.__tfBuffers[ 0 ] );\n    gl.getBufferSubData(\n      gl.ARRAY_BUFFER,\n      0,\n      this.__dstArrays[ 0 ],\n      first,\n      count,\n    );\n    gl.bindBuffer( gl.ARRAY_BUFFER, null );\n\n    gl.bindBuffer( gl.ARRAY_BUFFER, this.__tfBuffers[ 1 ] );\n    gl.getBufferSubData(\n      gl.ARRAY_BUFFER,\n      0,\n      this.__dstArrays[ 1 ],\n      first,\n      count,\n    );\n    gl.bindBuffer( gl.ARRAY_BUFFER, null );\n\n    return this.__dstArrays;\n  }\n\n  private __createOffsetBuffer(): WebGLBuffer {\n    const { gl, framesPerRender } = this;\n\n    const array = new Float32Array( framesPerRender )\n      .map( ( _, i ) => i );\n\n    const buffer = gl.createBuffer()!;\n\n    gl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n    gl.bufferData( gl.ARRAY_BUFFER, array, gl.STATIC_DRAW );\n    gl.bindBuffer( gl.ARRAY_BUFFER, null );\n\n    return buffer;\n  }\n\n  private __createTFBuffer(): WebGLBuffer {\n    const { gl, framesPerRender } = this;\n\n    const buffer = gl.createBuffer()!;\n\n    gl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      framesPerRender * Float32Array.BYTES_PER_ELEMENT,\n      gl.DYNAMIC_COPY,\n    );\n    gl.bindBuffer( gl.ARRAY_BUFFER, null );\n\n    return buffer;\n  }\n\n  private __createTransformFeedback(\n    tfBuffers: [ WebGLBuffer, WebGLBuffer ]\n  ): WebGLTransformFeedback {\n    const { gl } = this;\n\n    const tf = gl.createTransformFeedback()!;\n\n    gl.bindTransformFeedback( gl.TRANSFORM_FEEDBACK, tf );\n    gl.bindBufferBase( gl.TRANSFORM_FEEDBACK_BUFFER, 0, tfBuffers[ 0 ] );\n    gl.bindBufferBase( gl.TRANSFORM_FEEDBACK_BUFFER, 1, tfBuffers[ 1 ] );\n    gl.bindTransformFeedback( gl.TRANSFORM_FEEDBACK, null );\n\n    return tf;\n  }\n}\n", "import { TextureStoreEntry, TextureStoreImageEntry, TextureStoreSampleEntry, TextureStoreWavetableEntry } from './TextureStoreEntry';\n\nexport class TextureStore {\n  public readonly gl: WebGL2RenderingContext;\n\n  private __textures: Map<string, TextureStoreEntry>;\n\n  public get textureIds(): IterableIterator<string> {\n    return this.__textures.keys();\n  }\n\n  public constructor( gl: WebGL2RenderingContext ) {\n    this.gl = gl;\n\n    this.__textures = new Map();\n  }\n\n  /**\n   * Dispose all the textures.\n   */\n  public dispose(): void {\n    const { gl } = this;\n\n    this.__textures.forEach( ( texture ) => {\n      gl.deleteTexture( texture.texture );\n    } );\n\n    this.__textures.clear();\n  }\n\n  /**\n   * Get a texture.\n   */\n  public get( id: string ): TextureStoreEntry | null {\n    return this.__textures.get( id ) ?? null;\n  }\n\n  /**\n   * Load a x-y wavetable and store as a texture.\n   * The buffer have to be encoded in F32, 2048 samples per cycle.\n   *\n   * The texture name is gonna be `wavetable_${ name }`.\n   */\n  public loadWavetable( id: string, inputBuffer: Float32Array ): TextureStoreWavetableEntry {\n    const frames = inputBuffer.length / 2048;\n    const buffer = new Float32Array( inputBuffer.length * 4 );\n\n    for ( let i = 0; i < inputBuffer.length; i ++ ) {\n      buffer[ i * 4 + 0 ] = inputBuffer[ i ];\n    }\n\n    const texture = this.__uploadTexture( 2048, frames, buffer );\n\n    const entry = {\n      type: 'wavetable' as const,\n      width: 2048,\n      height: frames,\n      texture,\n    };\n    this.__textures.set( id, entry );\n    return entry;\n  }\n\n  /**\n   * Load an image and store as a texture.\n   */\n  public loadImage( id: string, image: TexImageSource ): TextureStoreImageEntry {\n    const texture = this.__uploadImageSource( image );\n\n    const entry = {\n      type: 'image' as const,\n      width: image.width,\n      height: image.height,\n      texture,\n    };\n    this.__textures.set( id, entry );\n    return entry;\n  }\n\n  /**\n   * Load a sample and store as a texture.\n   */\n  public loadSample( id: string, audioBuffer: AudioBuffer ): TextureStoreSampleEntry {\n    const { sampleRate, duration } = audioBuffer;\n    const frames = audioBuffer.length;\n    const width = 2048;\n    const lengthCeiled = Math.ceil( frames / 2048.0 );\n    const height = lengthCeiled;\n\n    const buffer = new Float32Array( width * height * 4 );\n    const channels = audioBuffer.numberOfChannels;\n\n    const dataL = audioBuffer.getChannelData( 0 );\n    const dataR = audioBuffer.getChannelData( channels === 1 ? 0 : 1 );\n\n    for ( let i = 0; i < frames; i ++ ) {\n      buffer[ i * 4 + 0 ] = dataL[ i ];\n      buffer[ i * 4 + 1 ] = dataR[ i ];\n    }\n\n    const texture = this.__uploadTexture( width, height, buffer );\n\n    const entry = {\n      type: 'sample' as const,\n      width,\n      height,\n      sampleRate,\n      duration,\n      texture,\n    };\n    this.__textures.set( id, entry );\n    return entry;\n  }\n\n  /**\n   * Delete a texture entry.\n   *\n   * Returns a boolean that indicates whether the deletion is successful or not.\n   */\n  public delete( id: string ): boolean {\n    const { gl } = this;\n\n    const texture = this.__textures.get( id );\n    if ( texture == null ) { return false; }\n\n    gl.deleteTexture( texture.texture );\n    this.__textures.delete( id );\n\n    return true;\n  }\n\n  /**\n   * Create a texture and upload data.\n   */\n  private __uploadTexture(\n    width: number,\n    height: number,\n    source: Float32Array,\n  ): WebGLTexture {\n    const { gl } = this;\n\n    const texture = gl.createTexture()!;\n\n    gl.bindTexture( gl.TEXTURE_2D, texture );\n\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA32F,\n      width,\n      height,\n      0,\n      gl.RGBA,\n      gl.FLOAT,\n      source,\n    );\n\n    gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n    gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n    gl.bindTexture( gl.TEXTURE_2D, null );\n\n    return texture;\n  }\n\n  /**\n   * Create a texture and upload data.\n   */\n  private __uploadImageSource(\n    source: TexImageSource,\n  ): WebGLTexture {\n    const { gl } = this;\n\n    const texture = gl.createTexture()!;\n\n    gl.bindTexture( gl.TEXTURE_2D, texture );\n\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA8,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      source,\n    );\n\n    gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR );\n    gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR );\n\n    gl.bindTexture( gl.TEXTURE_2D, null );\n\n    return texture;\n  }\n}\n", "/**\n * `lerp`, or `mix`\n */\nexport function lerp( a: number, b: number, x: number ): number {\n  return a + ( b - a ) * x;\n}\n", "import { BeatManager } from './BeatManager';\nimport { BufferReaderNode } from './BufferReaderNode';\nimport { EventEmittable } from './utils/EventEmittable';\nimport { Renderer } from './Renderer';\nimport { TextureStore } from './TextureStore';\nimport { applyMixins } from './utils/applyMixins';\nimport { lerp } from './utils/lerp';\nimport { shaderchunkPreLines } from './shaderchunks';\n\nconst BLOCK_SIZE = 128;\n\ninterface WavenerdDeckProgram {\n  code: string;\n  requiredTextures: Set<string>;\n}\n\ninterface WavenerdDeckParamEntry {\n  name: string;\n  value: number;\n  factor: number;\n  target: number;\n}\n\nexport class WavenerdDeck {\n  /**\n   * Its host deck.\n   * It's highly recommended to connect the node of the host deck into the node of this deck, to ensure the timing consistency.\n   */\n  public hostDeck?: WavenerdDeck;\n\n  /**\n   * The count of latency blocks.\n   * Block == 128 samples.\n   * Lower == less latency.\n   */\n  public latencyBlocks: number;\n\n  /**\n   * Its current cue status.\n   * `'none'`: There is nothing in its current cue.\n   * `'ready'`: There is a cue shader and is ready to be applied.\n   * `'applying'`: There is a cue shader and is going to be applied in the next bar.\n   */\n  private __cueStatus: 'none' | 'compiling' | 'ready' | 'applying' = 'none';\n\n  /**\n   * Its current cue status.\n   * `'none'`: There is nothing in its current cue.\n   * `'ready'`: There is a cue shader and is ready to be applied.\n   * `'applying'`: There is a cue shader and is going to be applied in the next bar.\n   */\n  public get cueStatus(): 'none' | 'compiling' | 'ready' | 'applying' {\n    return this.__cueStatus;\n  }\n\n  /**\n   * Blocks per a render.\n   */\n  private __blocksPerRender: number;\n\n  /**\n   * Blocks per a render.\n   */\n  public get blocksPerRender(): number {\n    return this.__blocksPerRender;\n  }\n\n  /**\n   * Frames per a render\n   */\n  public get framesPerRender(): number {\n    return BLOCK_SIZE * this.__blocksPerRender;\n  }\n\n  /**\n   * Whether the wavenerd deck is playing or not.\n   */\n  private __isPlaying: boolean;\n\n  /**\n   * Whether the wavenerd deck is playing or not.\n   */\n  public get isPlaying(): boolean {\n    return this.hostDeck?.__isPlaying ?? this.__isPlaying;\n  }\n\n  /**\n   * Its current bpm.\n   */\n  public get bpm(): number {\n    return this.beatManager.bpm;\n  }\n  public set bpm( value: number ) {\n    this.beatManager.bpm = value;\n  }\n\n  /**\n   * Its last updated time.\n   * Intended to be used for calculation of deltaTime inside (@link __prepareBuffer).\n   */\n  private __lastUpdatedTime: number;\n\n  /**\n   * Its renderer.\n   */\n  private __renderer: Renderer;\n\n  /**\n   * Its last compile error happened in [[WavenerdDeck.compile]].\n   */\n  private __lastError: any;\n  public get lastError(): any {\n    return this.__lastError;\n  }\n\n  /**\n   * Its binded `AudioContext`.\n   */\n  private __audio: AudioContext;\n  public get audio(): AudioContext {\n    return this.__audio;\n  }\n\n  /**\n   * Its node of the AudioContext.\n   */\n  private __node: GainNode;\n  public get node(): GainNode {\n    return this.__node;\n  }\n\n  private __bufferReaderNode?: BufferReaderNode;\n  private __bufferWriteBlocks: number;\n\n  /**\n   * Offset of the block compared to {@link __bufferWriteBlocks} in terms of time.\n   * It is used to rewind the deck.\n   */\n  private __blockOffset: number;\n\n  /**\n   * Alias for the `audio.sampleRate` .\n   */\n  public get sampleRate(): number {\n    return this.__audio.sampleRate;\n  }\n\n  private __beatManager: BeatManager;\n  public get beatManager(): BeatManager {\n    const hostDeckBeatManager = this.hostDeck?.beatManager;\n    if ( hostDeckBeatManager ) {\n      return hostDeckBeatManager;\n    }\n\n    return this.__beatManager;\n  }\n\n  private __program: WavenerdDeckProgram | null;\n  private __programCue: WavenerdDeckProgram | null;\n  private __programSwapTime: number | null;\n\n  private __params = new Map<string, WavenerdDeckParamEntry>();\n  private get params(): Map<string, WavenerdDeckParamEntry> {\n    return this.__params;\n  }\n\n  private __selfTextureStore: TextureStore;\n  private get __textureStore(): TextureStore {\n    if ( this.hostDeck ) {\n      return this.hostDeck.__textureStore;\n    }\n\n    return this.__selfTextureStore;\n  }\n\n  /**\n   * Constructor of the WavenerdDeck.\n   */\n  public constructor( {\n    gl,\n    audio,\n    hostDeck,\n    latencyBlocks,\n    blocksPerRender,\n    bpm,\n  }: {\n    gl: WebGL2RenderingContext;\n    audio: AudioContext;\n    hostDeck?: WavenerdDeck;\n    latencyBlocks?: number;\n    blocksPerRender?: number;\n    bpm?: number;\n  } ) {\n    this.__isPlaying = false;\n\n    this.latencyBlocks = latencyBlocks ?? 16;\n    this.__blocksPerRender = blocksPerRender ?? 16;\n\n    // -- host deck --------------------------------------------------------------------------------\n    if ( hostDeck ) {\n      this.hostDeck = hostDeck;\n    }\n\n    // -- beat manager -----------------------------------------------------------------------------\n    this.__beatManager = new BeatManager();\n    this.__beatManager.bpm = bpm ?? 140;\n    this.__beatManager.on( 'changeBPM', ( { bpm } ) => {\n      this.__emit( 'changeBPM', { bpm } );\n    } );\n\n    this.__lastUpdatedTime = 0.0;\n\n    // TODO: temporary solution\n    if ( hostDeck ) {\n      hostDeck.on( 'rewind', () => {\n        this.rewind();\n      } );\n    }\n\n    // -- renderer ---------------------------------------------------------------------------------\n    this.__renderer = new Renderer( gl, this.blocksPerRender );\n\n    this.__selfTextureStore = new TextureStore( gl );\n\n    this.__program = null;\n    this.__programCue = null;\n    this.__programSwapTime = null;\n\n    // -- audio ------------------------------------------------------------------------------------\n    this.__audio = audio;\n    this.__node = audio.createGain();\n\n    BufferReaderNode.addModule( audio ).then( () => {\n      this.__bufferReaderNode = new BufferReaderNode( audio );\n      this.__bufferReaderNode.connect( this.__node );\n    } );\n\n    this.__bufferWriteBlocks = 0;\n    this.__blockOffset = 0;\n  }\n\n  /**\n   * Dispose this WavenerdDeck.\n   */\n  public dispose(): void {\n    this.__setCueStatus( 'none' );\n\n    this.__renderer.dispose();\n    this.__selfTextureStore.dispose();\n\n    this.__bufferReaderNode?.disconnect();\n  }\n\n  /**\n   * Play the deck.\n   */\n  public play(): void {\n    this.__isPlaying = true;\n\n    this.__emit( 'play' );\n  }\n\n  /**\n   * Pause the deck.\n   */\n  public pause(): void {\n    this.__isPlaying = false;\n\n    this.__emit( 'pause' );\n  }\n\n  /**\n   * Rewind the deck.\n   */\n  public rewind(): void {\n    this.__lastUpdatedTime = 0.0;\n    this.__blockOffset = this.__bufferWriteBlocks;\n\n    this.__beatManager.reset();\n\n    this.applyCueImmediately();\n\n    this.__emit( 'rewind' );\n  }\n\n  /**\n   * Compile given shader code and cue the shader.\n   */\n  public async compile( code: string ): Promise<void> {\n    this.__setCueStatus( 'compiling' );\n\n    await this.__renderer.compile( code ).catch( ( e ) => {\n      const error = this.__processErrorMessage( e );\n\n      this.__programCue = null;\n\n      this.__setCueStatus( 'none' );\n\n      this.__emit( 'error', { error } );\n      this.__lastError = error;\n\n      throw new Error( error ?? undefined );\n    } );\n\n    const requiredTextures = new Set<string>();\n\n    for ( const id of this.__textureStore.textureIds ) {\n      if ( code.search( id ) !== -1 ) {\n        requiredTextures.add( id );\n      }\n    }\n\n    this.__programCue = {\n      code,\n      requiredTextures,\n    };\n\n    this.__setCueStatus( 'ready' );\n\n    this.__emit( 'error', { error: null } );\n    this.__lastError = null;\n  }\n\n  /**\n   * Apply the cue shader after the bar ends.\n   */\n  public applyCue(): void {\n    if ( this.__cueStatus === 'ready' ) {\n      this.__setCueStatus( 'applying' );\n\n      this.__programSwapTime =\n        this.beatManager.time - this.beatManager.bar + this.beatManager.barSeconds;\n    }\n  }\n\n  /**\n   * Apply the cue shader immediately.\n   */\n  public applyCueImmediately(): void {\n    if ( this.__programCue != null ) {\n      this.__setCueStatus( 'none' );\n\n      this.__renderer.applyCue();\n\n      this.__program = this.__programCue;\n      this.__programCue = null;\n      this.__programSwapTime = null;\n    }\n  }\n\n  /**\n   * Set a uniform value.\n   */\n  public setParam( name: string, value: number, factor = 50.0 ): void {\n    const param = this.params.get( name );\n    if ( param ) {\n      param.target = value;\n      param.factor = factor;\n    } else {\n      this.params.set( name, { name, target: value, value, factor } );\n    }\n\n    this.__emit( 'setParam', { name, value, factor } );\n  }\n\n  /**\n   * Load a x-y wavetable and store as a uniform texture.\n   * The buffer have to be encoded in F32, 2048 samples per cycle.\n   */\n  public loadWavetable(\n    name: string,\n    inputBuffer: Float32Array,\n  ): void {\n    const id = `wavetable_${ name }`;\n    this.__textureStore.loadWavetable( id, inputBuffer );\n\n    this.__addRequiredTexture( id );\n\n    this.__emit( 'loadWavetable', { name } );\n  }\n\n  /**\n   * Delete a wavetable.\n   */\n  public deleteWavetable( name: string ): void {\n    const isSuccess = this.__textureStore.delete( `wavetable_${ name }` );\n\n    if ( isSuccess ) {\n      this.__emit( 'deleteWavetable', { name } );\n    }\n  }\n\n  /**\n   * Load an image and store as a uniform texture.\n   */\n  public loadImage(\n    name: string,\n    image: TexImageSource,\n  ): void {\n    const id = `image_${ name }`;\n    this.__textureStore.loadImage( id, image );\n\n    this.__addRequiredTexture( id );\n\n    this.__emit( 'loadImage', { name } );\n  }\n\n  /**\n   * Delete an image.\n   */\n  public deleteImage( name: string ): void {\n    const isSuccess = this.__textureStore.delete( `image_${ name }` );\n\n    if ( isSuccess ) {\n      this.__emit( 'deleteImage', { name } );\n    }\n  }\n\n  /**\n   * Load a sample and store as a uniform texture.\n   */\n  public async loadSample( name: string, inputBuffer: ArrayBuffer ): Promise<void> {\n    const audioBuffer = await this.__audio.decodeAudioData( inputBuffer );\n\n    const id = `sample_${ name }`;\n    const { duration, sampleRate } = this.__textureStore.loadSample( id, audioBuffer );\n\n    this.__addRequiredTexture( id );\n\n    this.__emit( 'loadSample', { name, duration, sampleRate } );\n  }\n\n  /**\n   * Delete a sample.\n   */\n  public deleteSample( name: string ): void {\n    const isSuccess = this.__textureStore.delete( `success_${ name }` );\n\n    if ( isSuccess ) {\n      this.__emit( 'deleteSample', { name } );\n    }\n  }\n\n  public async update(): Promise<void> {\n    const bufferReaderNode = this.__bufferReaderNode;\n    if ( bufferReaderNode == null ) { return; }\n\n    const { readBlocks } = bufferReaderNode;\n    const { sampleRate, blocksPerRender, framesPerRender } = this;\n\n    this.__bufferReaderNode?.setActive( this.isPlaying );\n\n    // -- early abort? -----------------------------------------------------------------------------\n    if ( !this.isPlaying ) { return; }\n\n    // -- choose a right write block ---------------------------------------------------------------\n    const blockAhead = this.__bufferWriteBlocks - readBlocks;\n\n    // we don't have to render this time\n    if ( blockAhead > this.latencyBlocks ) {\n      return;\n    }\n\n    // we're very behind\n    if ( blockAhead < 0 ) {\n      this.__bufferWriteBlocks = (\n        Math.floor( readBlocks / blocksPerRender ) + 1\n      ) * blocksPerRender;\n    }\n\n    const genTime = BLOCK_SIZE * ( this.__bufferWriteBlocks - this.__blockOffset ) / sampleRate;\n    this.beatManager.update( genTime );\n\n    // -- should I process the next program? -------------------------------------------------------\n    let beginNext = this.__programSwapTime != null\n      ? Math.floor( ( this.__programSwapTime - genTime ) * sampleRate )\n      : Infinity;\n    beginNext = Math.min( beginNext, framesPerRender );\n\n    // -- swap the program from first --------------------------------------------------------------\n    if ( beginNext < 0 ) {\n      this.applyCueImmediately();\n\n      beginNext = framesPerRender;\n    }\n\n    // -- render -----------------------------------------------------------------------------------\n    if ( this.__program ) {\n      await this.__prepareBuffer( 0, beginNext );\n    }\n\n    // -- render the next program from the mid of the block ----------------------------------------\n    if ( beginNext < framesPerRender && this.__programCue != null ) {\n      this.applyCueImmediately();\n\n      await this.__prepareBuffer( beginNext, framesPerRender - beginNext );\n    }\n\n    // -- update write blocks ----------------------------------------------------------------------\n    this.__bufferWriteBlocks += this.blocksPerRender;\n\n    // -- emit an event ----------------------------------------------------------------------------\n    this.__emit( 'update' );\n  }\n\n  private __addRequiredTexture( id: string ): void {\n    if ( this.__program && this.__program.code.search( id ) ) {\n      this.__program.requiredTextures.add( id );\n    }\n\n    if ( this.__programCue && this.__programCue.code.search( id ) ) {\n      this.__programCue.requiredTextures.add( id );\n    }\n  }\n\n  private async __prepareBuffer(\n    first: number,\n    count: number\n  ): Promise<void> {\n    const bufferReaderNode = this.__bufferReaderNode;\n    if ( bufferReaderNode == null ) { return; }\n\n    const {\n      time,\n      beatSeconds,\n      barSeconds,\n      sixteenBarSeconds,\n      beat,\n      bar,\n      sixteenBar,\n    } = this.beatManager;\n    const { sampleRate } = this;\n\n    const delta = time - this.__lastUpdatedTime;\n    this.__lastUpdatedTime = time;\n\n    // render\n    this.params.forEach( ( param ) => {\n      if ( param.factor <= 0.0 ) {\n        param.value = param.target;\n      } else {\n        param.value = lerp( param.target, param.value, Math.exp( -param.factor * delta ) );\n      }\n\n      this.__renderer.uniform4f(\n        'param_' + param.name,\n        param.target,\n        param.value,\n        param.factor,\n        0.0\n      );\n    } );\n\n    let textureUnit = 0;\n\n    const { requiredTextures } = this.__program!;\n\n    for ( const textureName of requiredTextures ) {\n      const textureEntry = this.__textureStore.get( textureName );\n\n      if ( textureEntry != null ) {\n        this.__renderer.uniformTexture(\n          textureName,\n          textureUnit,\n          textureEntry.texture,\n        );\n        textureUnit ++;\n\n        const meta = (\n          textureEntry.type === 'sample'\n            ? [\n              textureEntry.width,\n              textureEntry.height,\n              textureEntry.sampleRate,\n              textureEntry.duration,\n            ]\n            : [\n              textureEntry.width,\n              textureEntry.height,\n              0,\n              0,\n            ]\n        ) as [ number, number, number, number ];\n\n        this.__renderer.uniform4f(\n          textureName + '_meta',\n          ...meta,\n        );\n      }\n    }\n\n    this.__renderer.uniform1f( 'bpm', this.bpm );\n    this.__renderer.uniform1f( '_deltaSample', 1.0 / sampleRate );\n    this.__renderer.uniform4f(\n      'timeLength',\n      beatSeconds,\n      barSeconds,\n      sixteenBarSeconds,\n      1E16\n    );\n    this.__renderer.uniform4f(\n      '_timeHead',\n      beat,\n      bar,\n      sixteenBar,\n      time\n    );\n\n    const [ outL, outR ] = await this.__renderer.render( first, count );\n\n    bufferReaderNode.write(\n      0,\n      this.__bufferWriteBlocks,\n      first,\n      outL.subarray( first, first + count ),\n    );\n\n    bufferReaderNode.write(\n      1,\n      this.__bufferWriteBlocks,\n      first,\n      outR.subarray( first, first + count ),\n    );\n  }\n\n  private __setCueStatus( cueStatus: 'none' | 'compiling' | 'ready' | 'applying' ): void {\n    this.__cueStatus = cueStatus;\n    this.__emit( 'changeCueStatus', { cueStatus } );\n  }\n\n  private __processErrorMessage( error: any ): string | null {\n    const str: string | undefined = error?.message ?? error;\n    if ( !str ) { return null; }\n\n    return str.replace( /ERROR: (\\d+):(\\d+)/g, ( match, ...args ) => {\n      const line = parseInt( args[ 1 ] ) - shaderchunkPreLines + 1;\n      return `ERROR: ${ args[ 0 ] }:${ line }`;\n    } );\n  }\n}\n\nexport interface WavenerdDeck extends EventEmittable<{\n  update: void;\n  play: void;\n  pause: void;\n  rewind: void;\n  changeCueStatus: { cueStatus: 'none' | 'compiling' | 'ready' | 'applying' };\n  setParam: { name: string; value: number; factor: number };\n  loadWavetable: { name: string };\n  deleteWavetable: { name: string };\n  loadImage: { name: string };\n  deleteImage: { name: string };\n  loadSample: { name: string; sampleRate: number; duration: number };\n  deleteSample: { name: string };\n  changeBPM: { bpm: number };\n  error: { error: string | null };\n}> {}\napplyMixins( WavenerdDeck, [ EventEmittable ] );\n"],
  "mappings": "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",
  "names": []
}
